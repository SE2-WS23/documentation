openapi: "3.0.0"
info:
  title: Resource Management API
  version: "1.0.0"
  description: API for managing Course feedback with field selection and full data retrieval.

paths:
  /course-feedback:
    get:
      summary: Retrieve a list of all Course feedbacks
      operationId: listCourseFeedback
      parameters:
        - name: fields
          in: query
          description: Comma-separated list of fields to include in the response
          schema:
            type: string
        - name: full
          in: query
          description: Flag to include nested data in the response
          schema:
            type: boolean
      responses:
        "200":
          description: A list of all Course feedbacks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Feedback"
              examples:
                fullData:
                  summary: Response with full=true
                  value: [{"userId": "762b1737-fee6-4306-bab4-ebed7b5659ed", "courseId": "c3ed8a9e-ac75-4b24-807c-3624c38b49e0", "courseQuality": 5, "courseLength": 5, "nestedData": {"detail1": "Detail 1.1", "detail2": "Detail 1.2"}}, {"userId": "762b1737-fee6-4306-bab4-ebed7b5659ed", "courseId": "762b1737-fee6-4306-bab4-ebed7b5659ed", "courseQuality": 4, "courseLength": 3, "nestedData": {"detail1": "Detail 2.1", "detail2": "Detail 2.2"}}]
                lengthAndQuality:
                  summary: Response with fields=courseLength,courseQuality
                  value: [{"courseLength": 3, "courseQuality": 4}, {"courseLength": 6, "courseQuality": 3}]
                

    post:
      summary: Create a new resource
      operationId: createCourseFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feedback"
      responses:
        "201":
          description: Course feedback created

  /course-feedback/{courseId}:
    get:
      summary: Retrieve a specific course feedback
      operationId: getCourseFeedback
      parameters:
        - name: courseId
          in: path
          required: true
          description: Unique identifier of the course
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated list of fields to include in the response
          schema:
            type: string
        - name: full
          in: query
          description: Flag to include nested data in the response
          schema:
            type: boolean
      responses:
        "200":
          description: Detailed information about the course feedback
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Feedback"
              examples:
                fullData:
                  summary: Response with full=true
                  value: [{"userId": "562b1737-fee6-4306-bab4-ebed7b5659ed", "courseId": "c3ed8a9e-ac75-4b24-807c-3624c38b49e0", "courseQuality": 5, "courseLength": 5, "nestedData": {"detail1": "Detail 1.1", "detail2": "Detail 1.2"}}, {"userId": "762b1737-fee6-4306-bab4-ebed7b5659ed", "courseId": "c3ed8a9e-ac75-4b24-807c-3624c38b49e0", "courseQuality": 4, "courseLength": 3, "nestedData": {"detail1": "Detail 2.1", "detail2": "Detail 2.2"}}]
                lengthAndQuality:
                  summary: Response with fields=courseLength,courseQuality
                  value: [{"courseLength": 3, "courseQuality": 4}, {"courseLength": 6, "courseQuality": 3}]
                

    put:
      summary: Update an existing course feedback
      operationId: updateCourseFeedback
      parameters:
        - name: courseId
          in: path
          required: true
          description: Unique identifier of the course
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feedback"
      responses:
        "200":
          description: Course feedback updated

    delete:
      summary: Delete a specific course feedback
      operationId: deleteCourseFeedback
      parameters:
        - name: courseId
          in: path
          required: true
          description: Unique identifier of the course
          schema:
            type: string
      responses:
        "204":
          description: Course feedback deleted

components:
  schemas:
    Feedback:
      type: object
      properties:
        userId:
          type: integer
          format: uuid 
          description: Unique identifier for the user
          minimum: 1
        courseId:
          type: integer
          format: uuid
          description: Unique identifier for the course
        courseLength:
          type: integer
          description: Length of the course rated by the user, on a scale of 1 to 10
          minimum: 1
          maximum: 10
        courseQuality:
          type: integer
          description: Quality of the course rated by the user, on a scale of 1 to 10
          minimum: 1
          maximum: 10
        comments:
          type: string
          description: Optional comments provided by the user
      required:
        - userId
        - courseId
        - courseLength
        - courseQuality
